version: "3.7"
services:
  notebook:
    image: jupyter/pyspark-notebook:spark-3.1.2
    container_name: notebook
    environment:
      - aws_access_key=${MINIO_ACCESS_KEY}
      - aws_secret_key=${MINIO_SECRET_KEY}
    ports:
      - "8888:8888"
    volumes:
      - ../notebooks:/home/jovyan/notebooks
      - ./build:/home/jovyan/openlineage
    links:
      - "api:marquez"
    depends_on:
      - api
  # Minio as S3 Storage
  minio:
    image: 'minio/minio:latest'
    hostname: minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ../minio/data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data --console-address :9001

  create_buckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c '
      sleep 5;
      /usr/bin/mc config host add s3 http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY} --api S3v4;
      [[ ! -z "`/usr/bin/mc ls | grep landing_zone`" ]] || /usr/bin/mc mb s3/landing-zone;
      [[ ! -z "`/usr/bin/mc ls | grep raw`" ]] || /usr/bin/mc mb s3/raw;
      [[ ! -z "`/usr/bin/mc ls | grep transformed`" ]] || /usr/bin/mc mb s3/transformed;
      [[ ! -z "`/usr/bin/mc ls | grep analytics`" ]] || /usr/bin/mc mb s3/analytics;
      /usr/bin/mc cp /usr/deniro.csv s3/landing-zone;
      exit 0;
      '
    volumes:
      - ../sample_data/deniro.csv:/usr/deniro.csv
# Marquez as an OpenLineage Client
  api:
    image: marquezproject/marquez
    container_name: marquez-api
    ports:
      - "5000:5000"
      - "5001:5001"
    volumes:
      - ./bootstrap/wait-for-it.sh:/usr/src/app/wait-for-it.sh
    links:
      - "db:postgres"
    depends_on:
      - db
    entrypoint: [ "./wait-for-it.sh", "db:5432", "--", "./entrypoint.sh" ]

  web:
    image: marquezproject/marquez-web:latest
    container_name: marquez-web
    environment:
      - MARQUEZ_HOST=marquez-api
      - MARQUEZ_PORT=5000
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    depends_on:
      - api

  db:
    image: postgres:12.1
    container_name: marquez-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - MARQUEZ_DB=marquez
      - MARQUEZ_USER=marquez
      - MARQUEZ_PASSWORD=marquez
    volumes:
      - ./bootstrap/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    # Enables SQL statement logging (see: https://www.postgresql.org/docs/12/runtime-config-logging.html#GUC-LOG-STATEMENT)
    # command: ["postgres", "-c", "log_statement=all"]